
@model Core.Helpers.PagedResultSet<Core.Models.MovieModel>
<html>
<head>
    <title>Movie Shop</title>
</head>
<body>
<nav class="navbar navbar-dark bg-dark px-4">
    <a class="navbar-brand text-white" href="#">Movie Shop ðŸŽ¬</a>
    <div class="d-flex">
        <button class="btn btn-outline-light me-2">Login</button>
        <button class="btn btn-light">Register</button>
    </div>
</nav>
<!-- Movie Grid -->
<div class="container mt-4">
    <div class="row">
        @foreach (var item in Model.Items)
        {
            <partial name="_MovieCard" model="item"/>
        }
    </div>
</div>
<!-- Pagination Controls -->
<nav aria-label="Movie Pagination">
    <ul class="pagination justify-content-center">

        <!-- Previous Button -->
        @if (Model.CurrentPage > 1)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-controller="Movie" asp-route-pageNumber="@(Model.CurrentPage - 1)">Previous</a>
            </li>
        }
        
        @* We will only show 10 pagis  at a time*@
        @{

            int startPage = ((Model.CurrentPage - 1) / 10) * 10 + 1; // sets start page to 1 until current page == 10
            int endPage = Math.Min(startPage + 9, Model.TotalPages);
        }

        <!-- Show 10 Pages Dynamically -->
        @for (int i = startPage; i <= endPage; i++)
        {
            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                <a class="page-link" asp-action="Index" asp-controller="Movie" asp-route-pageNumber="@i">@i</a>
            </li>
        }

        <!-- Next Button (Only Show if More Pages Exist) -->
        @if (endPage < Model.TotalPages)
        {
            <li class="page-item">
                <a class="page-link" asp-action="Index" asp-controller="Movie" asp-route-pageNumber="@(Model.CurrentPage + 1)">Next</a>
            </li>
        }

    </ul>
</nav>

</body>
</html>